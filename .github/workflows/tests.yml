name: CI/CD Pipeline with Best Practices

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    build: 
        runs-on: ubuntu-20.04
        steps: 
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Start Docker
              run: sudo service docker start

            - name: Grant Permissions to Docker
              run: sudo chmod 666 /var/run/docker.sock

            - name: Check Docker status
              run: docker info

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Cache Docker layers
              uses: actions/cache@v3
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx
                  restore-keys: |
                    ${{ runner.os }}-buildx
            - name: Install Docker Compose
              run: |
                  sudo apt-get update
                  sudo apt-get install -y docker-compose
            - name: Build and Test
              run: |
                docker-compose -f ./DevOps/lab3/docker-compose.yml up -d --build
                docker-compose exec tests pytest app/test/test_main.py

    test:
        needs: build
        runs-on: ubuntu-20.04
        steps: 
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Cache Docker layers
              uses: actions/cache@v3
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ github.run_id }}
                  restore-keys: |
                    ${{ runner.os }}-buildx-
            - name: Install Docker Compose
              run: |
                  sudo apt-get update
                  sudo apt-get install -y docker-compose

            - name: test application
              run: docker compose -f ./DevOps/lab3/docker-compose.yml build

            - name: test application
              run: |
                docker-compose exec -T tests pytest ./DevOps/lab3/app/test/test_main.py

              env:
                  DOCKER_BUILDKIT: 1
                  COMPOSE_DOCKER_CLI_BUILD: 1